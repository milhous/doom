{
    "address": "0xD09Db1170Fb0C99ff5251249ba92b0013dbED20c",
    "abi": [{
            "inputs": [{
                "internalType": "address",
                "name": "priceFeed",
                "type": "address"
            }],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [{
                "internalType": "address",
                "name": "fundingAddress",
                "type": "address"
            }],
            "name": "getAddressToAmountFunded",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [{
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
            }],
            "name": "getFunder",
            "outputs": [{
                "internalType": "address",
                "name": "",
                "type": "address"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [{
                "internalType": "address",
                "name": "",
                "type": "address"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [{
                "internalType": "contract AggregatorV3Interface",
                "name": "",
                "type": "address"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0x3ef4e48256ad542b9ded0ab210f6ac97aa9b976af95402cd4bb183bf6b28f26a",
    "receipt": {
        "to": null,
        "from": "0xeC9D222B3389342eEf07829B16b008971D7281f5",
        "contractAddress": "0xD09Db1170Fb0C99ff5251249ba92b0013dbED20c",
        "transactionIndex": 53,
        "gasUsed": "1010590",
        "logsBloom": "0x
        "blockHash": "0x2b6dcf231783645a945a5f22c71a498d1ae439c45e2c945c4bf4afbe037b65b7",
        "transactionHash": "0x3ef4e48256ad542b9ded0ab210f6ac97aa9b976af95402cd4bb183bf6b28f26a",
        "logs": [],
        "blockNumber": 8483285,
        "cumulativeGasUsed": "16280647",
        "status": 1,
        "byzantium": true
    },
    "args": [
        "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
    ],
    "numDeployments": 1,
    "solcInputHash": "d6461c3c8fa17a883cb6574b71839180",
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.17;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 3. Interfaces, Libraries, Contracts\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Patrick Collins\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 1 * 10 ** 18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events (we have none!)\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// @notice Funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // Transfer vs call vs Send\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x8e6576fafece562d3b947f60dd99f203bdda3035d2d1355b13c9783a63d8ce78\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    // call it get fiatConversionRate, since it assumes something about decimals\\n    // It wouldn't work for every aggregator\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa4836bc002c4911c6900b60ca27e477cb1d7173ba9725962980402a77d196877\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126e3803806200126e83398181016040528101906200003791906200011d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110e762000187600039600081816102cc0152818161045f015281816105040152818161068e015261088401526110e76000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b38565b6101e9565b6040516100bf9190610b7e565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610b7e565b60405180910390f35b3480156100ff57600080fd5b506101086102ca565b005b34801561011657600080fd5b5061011f6104f4565b60405161012c9190610b7e565b60405180910390f35b34801561014157600080fd5b5061014a610500565b6040516101579190610ba8565b60405180910390f35b34801561016c57600080fd5b50610175610528565b6040516101829190610c22565b60405180910390f35b610193610552565b005b3480156101a157600080fd5b506101aa61068c565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c69565b61091a565b6040516101e09190610ba8565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cab565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fa57600080828154811061037457610373610cd8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f290610d36565b915050610352565b50600067ffffffffffffffff81111561041657610415610d7e565b5b6040519080825280602002602001820160405280156104445781602001602082028036833780820191505090505b506000908051906020019061045a929190610a2e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104a190610dde565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b50509050806104f157600080fd5b50565b670de0b6b3a764000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000610590600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096190919063ffffffff16565b10156105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890610e50565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106209190610e70565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610711576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561079457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074a575b5050505050905060005b815181101561081f5760008282815181106107bc576107bb610cd8565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081790610d36565b91505061079e565b50600067ffffffffffffffff81111561083b5761083a610d7e565b5b6040519080825280602002602001820160405280156108695781602001602082028036833780820191505090505b506000908051906020019061087f929190610a2e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108c690610dde565b60006040518083038185875af1925050503d8060008114610903576040519150601f19603f3d011682016040523d82523d6000602084013e610908565b606091505b505090508061091657600080fd5b5050565b600080828154811061092f5761092e610cd8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096d8361099d565b90506000670de0b6b3a764000085836109869190610ea4565b6109909190610f15565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190610fbe565b5050509150506402540be40081610a269190611039565b915050919050565b828054828255906000526020600020908101928215610aa7579160200282015b82811115610aa65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a4e565b5b509050610ab49190610ab8565b5090565b5b80821115610ad1576000816000905550600101610ab9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0582610ada565b9050919050565b610b1581610afa565b8114610b2057600080fd5b50565b600081359050610b3281610b0c565b92915050565b600060208284031215610b4e57610b4d610ad5565b5b6000610b5c84828501610b23565b91505092915050565b6000819050919050565b610b7881610b65565b82525050565b6000602082019050610b936000830184610b6f565b92915050565b610ba281610afa565b82525050565b6000602082019050610bbd6000830184610b99565b92915050565b6000819050919050565b6000610be8610be3610bde84610ada565b610bc3565b610ada565b9050919050565b6000610bfa82610bcd565b9050919050565b6000610c0c82610bef565b9050919050565b610c1c81610c01565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b65565b8114610c5157600080fd5b50565b600081359050610c6381610c3d565b92915050565b600060208284031215610c7f57610c7e610ad5565b5b6000610c8d84828501610c54565b91505092915050565b600081519050610ca581610c3d565b92915050565b600060208284031215610cc157610cc0610ad5565b5b6000610ccf84828501610c96565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4182610b65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d7357610d72610d07565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dc8600083610dad565b9150610dd382610db8565b600082019050919050565b6000610de982610dbb565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e3a601b83610df3565b9150610e4582610e04565b602082019050919050565b60006020820190508181036000830152610e6981610e2d565b9050919050565b6000610e7b82610b65565b9150610e8683610b65565b9250828201905080821115610e9e57610e9d610d07565b5b92915050565b6000610eaf82610b65565b9150610eba83610b65565b9250828202610ec881610b65565b91508282048414831517610edf57610ede610d07565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610b65565b9150610f2b83610b65565b925082610f3b57610f3a610ee6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6581610f46565b8114610f7057600080fd5b50565b600081519050610f8281610f5c565b92915050565b6000819050919050565b610f9b81610f88565b8114610fa657600080fd5b50565b600081519050610fb881610f92565b92915050565b600080600080600060a08688031215610fda57610fd9610ad5565b5b6000610fe888828901610f73565b9550506020610ff988828901610fa9565b945050604061100a88828901610c96565b935050606061101b88828901610c96565b925050608061102c88828901610f73565b9150509295509295909350565b600061104482610f88565b915061104f83610f88565b925082820261105d81610f88565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561109557611094610d07565b5b82820584148315176110aa576110a9610d07565b5b509291505056fea2646970667358221220f73797c484e23a71b650ae50442d759dd1187e3a06ab86b132fbcc9f5141760164736f6c63430008110033",
    "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b38565b6101e9565b6040516100bf9190610b7e565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610b7e565b60405180910390f35b3480156100ff57600080fd5b506101086102ca565b005b34801561011657600080fd5b5061011f6104f4565b60405161012c9190610b7e565b60405180910390f35b34801561014157600080fd5b5061014a610500565b6040516101579190610ba8565b60405180910390f35b34801561016c57600080fd5b50610175610528565b6040516101829190610c22565b60405180910390f35b610193610552565b005b3480156101a157600080fd5b506101aa61068c565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c69565b61091a565b6040516101e09190610ba8565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cab565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103fa57600080828154811061037457610373610cd8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f290610d36565b915050610352565b50600067ffffffffffffffff81111561041657610415610d7e565b5b6040519080825280602002602001820160405280156104445781602001602082028036833780820191505090505b506000908051906020019061045a929190610a2e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104a190610dde565b60006040518083038185875af1925050503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b50509050806104f157600080fd5b50565b670de0b6b3a764000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000610590600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096190919063ffffffff16565b10156105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890610e50565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106209190610e70565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610711576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561079457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074a575b5050505050905060005b815181101561081f5760008282815181106107bc576107bb610cd8565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081790610d36565b91505061079e565b50600067ffffffffffffffff81111561083b5761083a610d7e565b5b6040519080825280602002602001820160405280156108695781602001602082028036833780820191505090505b506000908051906020019061087f929190610a2e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108c690610dde565b60006040518083038185875af1925050503d8060008114610903576040519150601f19603f3d011682016040523d82523d6000602084013e610908565b606091505b505090508061091657600080fd5b5050565b600080828154811061092f5761092e610cd8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096d8361099d565b90506000670de0b6b3a764000085836109869190610ea4565b6109909190610f15565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190610fbe565b5050509150506402540be40081610a269190611039565b915050919050565b828054828255906000526020600020908101928215610aa7579160200282015b82811115610aa65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a4e565b5b509050610ab49190610ab8565b5090565b5b80821115610ad1576000816000905550600101610ab9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0582610ada565b9050919050565b610b1581610afa565b8114610b2057600080fd5b50565b600081359050610b3281610b0c565b92915050565b600060208284031215610b4e57610b4d610ad5565b5b6000610b5c84828501610b23565b91505092915050565b6000819050919050565b610b7881610b65565b82525050565b6000602082019050610b936000830184610b6f565b92915050565b610ba281610afa565b82525050565b6000602082019050610bbd6000830184610b99565b92915050565b6000819050919050565b6000610be8610be3610bde84610ada565b610bc3565b610ada565b9050919050565b6000610bfa82610bcd565b9050919050565b6000610c0c82610bef565b9050919050565b610c1c81610c01565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b65565b8114610c5157600080fd5b50565b600081359050610c6381610c3d565b92915050565b600060208284031215610c7f57610c7e610ad5565b5b6000610c8d84828501610c54565b91505092915050565b600081519050610ca581610c3d565b92915050565b600060208284031215610cc157610cc0610ad5565b5b6000610ccf84828501610c96565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4182610b65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d7357610d72610d07565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dc8600083610dad565b9150610dd382610db8565b600082019050919050565b6000610de982610dbb565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e3a601b83610df3565b9150610e4582610e04565b602082019050919050565b60006020820190508181036000830152610e6981610e2d565b9050919050565b6000610e7b82610b65565b9150610e8683610b65565b9250828201905080821115610e9e57610e9d610d07565b5b92915050565b6000610eaf82610b65565b9150610eba83610b65565b9250828202610ec881610b65565b91508282048414831517610edf57610ede610d07565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610b65565b9150610f2b83610b65565b925082610f3b57610f3a610ee6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6581610f46565b8114610f7057600080fd5b50565b600081519050610f8281610f5c565b92915050565b6000819050919050565b610f9b81610f88565b8114610fa657600080fd5b50565b600081519050610fb881610f92565b92915050565b600080600080600060a08688031215610fda57610fd9610ad5565b5b6000610fe888828901610f73565b9550506020610ff988828901610fa9565b945050604061100a88828901610c96565b935050606061101b88828901610c96565b925050608061102c88828901610f73565b9150509295509295909350565b600061104482610f88565b915061104f83610f88565b925082820261105d81610f88565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561109557611094610d07565b5b82820584148315176110aa576110a9610d07565b5b509291505056fea2646970667358221220f73797c484e23a71b650ae50442d759dd1187e3a06ab86b132fbcc9f5141760164736f6c63430008110033",
    "devdoc": {
        "author": "Patrick Collins",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "getAddressToAmountFunded(address)": {
                "params": {
                    "fundingAddress": "the address of the funder"
                },
                "returns": {
                    "_0": "the amount funded"
                }
            }
        },
        "title": "A sample Funding Contract",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "Funds our contract based on the ETH/USD price"
            },
            "getAddressToAmountFunded(address)": {
                "notice": "Gets the amount that an address has funded"
            }
        },
        "notice": "This contract is for creating a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [{
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}